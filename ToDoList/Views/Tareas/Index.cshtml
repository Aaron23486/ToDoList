    @model IEnumerable<ToDoList.Data.Entities.Tarea>

    @{
        ViewData["Title"] = "Lista de Tareas";
    }

    <div class="container my-5">
        <div class="row justify-content-between align-items-center">
            <div class="col-auto">
                <h1 class="display-4 text-dark">Lista de Tareas</h1>
            </div>
            <div class="col-auto">
                <a asp-action="Create" class="btn btn-success btn-lg">Nueva Tarea</a>
            </div>
        </div>

    <!-- Filtro por fecha -->
    <form method="get" class="mt-4">
        <div class="row">
            <div class="col-auto">
                <label for="startDate">Fecha desde:</label>
                <input type="date" name="startDate" id="startDate" class="form-control" />
            </div>
            <div class="col-auto">
                <label for="endDate">Fecha hasta:</label>
                <input type="date" name="endDate" id="endDate" class="form-control" />
            </div>
            <div class="col-auto d-flex align-items-end">
                <button type="submit" class="btn btn-primary">Filtrar</button>
            </div>

        </div>
    </form>




        <div class="table-responsive mt-4">
            <table class="table table-striped table-hover">
                <thead class="thead-dark">
                    <tr>
                        <th>Nombre</th>
                        <th>Descripción</th>
                        <th>Fecha de Vencimiento</th>
                        <th>Completada</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.Title)</td>
                            <td>@Html.DisplayFor(modelItem => item.Description)</td>
                            <td>@Html.DisplayFor(modelItem => item.DueDate)</td>
                            <td>
                                <div class="form-check">
                                    <!-- Usamos ternario para asignar el atributo "checked" -->
                                    <input type="checkbox"
                                           class="form-check-input"
                                           data-id="@item.TareaId"
                                    @(item.IsCompleted ? "checked" : "")
                                           onchange="updateStatus(event, this)" />
                                </div>
                            </td>
                            <td>
                                <a asp-action="Edit" asp-route-id="@item.TareaId" class="btn btn-warning btn-sm">Editar</a>
                                <a asp-action="Details" asp-route-id="@item.TareaId" class="btn btn-info btn-sm">Detalles</a>
                                <a asp-action="Delete" asp-route-id="@item.TareaId" class="btn btn-danger btn-sm">Eliminar</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    @section Scripts {
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script>


            function updateStatus(event, checkbox) {
                event.preventDefault();  // Esto previene que la página se recargue o el formulario se envíe
                var tareaId = $(checkbox).data('id');
                var isCompleted = $(checkbox).prop('checked');

                $.ajax({
                    url: '/Tareas/UpdateStatus',
                    type: 'POST',
                    data: {
                        TareaId: tareaId,
                        IsCompleted: isCompleted
                    },
                    success: function (response) {
                        console.log('Estado actualizado');
                    },
                    error: function (error) {
                        console.error('Error al actualizar el estado:', error);
                    }
                });

                return false; // También es una forma de evitar el comportamiento por defecto
            }
    </script>
}
